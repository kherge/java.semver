// Register the Gradle plugins.
plugins {
    id 'checkstyle'
    id 'jacoco'
    id 'java'
    id 'java-library'

    // Use Lombok.
    // https://github.com/franzbecker/gradle-lombok
    id 'io.franzbecker.gradle-lombok' version '1.14'

    // Use SonarQube.
    // https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+Gradle
    id 'org.sonarqube' version '2.6'
}

// Set the library information.
group 'io.herrera.kevin'

version '0.0.0'

// Support Java 8.
sourceCompatibility = 1.8

// Register artifact repositories.
repositories {
    mavenCentral()
}

// Declare the project dependencies.
dependencies {

    // Use JUnit 5.
    // https://docs.gradle.org/current/userguide/java_testing.html#example_junit_jupiter_dependencies
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.3.1')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.3.1')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.3.1')

    // Use Mockito 2.
    // https://site.mockito.org/
    testCompile('org.mockito:mockito-core:2.23.0')
}

// Configure the Checkstyle plugin.
checkstyle {

    // Set the path to the configuration file.
    configFile = file('config/checkstyle.xml')

    // Use a more recent version of Checkstyle.
    toolVersion = '8.14'
}

// Configure the JaCoCo tool.
jacoco {

    // Use 0.8.2 to support JDK 11.
    toolVersion = '0.8.2'
}

// Use JaCoCo to generate code coverage reports.
jacocoTestReport {

    // Require that tests be performed first.
    dependsOn 'test'
}

// Configure the Lombok plugin.
lombok {

    // Use a more recent version of Lombok.
    version = '1.18.4'
}

// Use SonarQube to analyze the code.
sonarqube {
    properties {
        property 'sonar.projectKey', 'kherge_java.semver'
        property 'sonar.organization', 'kherge-github'
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.login', System.getenv('SONAR_TOKEN')
        property 'sonar.java.checkstyle.reportPaths', './build/reports/checkstyle/main.xml'
    }
}

// Configure all Checkstyle tasks.
tasks.withType(Checkstyle) {

    // Disable dumping output to console.
    logging.setLevel(LogLevel.ERROR)

    // Write reports as HTML.
    reports {
        html.enabled = true
        xml.enabled = true
    }
}

// Use JUnit 5 for testing.
// https://docs.gradle.org/current/userguide/java_testing.html#using_junit5
test {
    useJUnitPlatform()
}
